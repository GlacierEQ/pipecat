name: Pipecat CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy to production'
        required: false
        default: 'false'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e ".[dev,test]"
        
    - name: Lint with ruff
      run: |
        ruff check .
        
    - name: Format check with black
      run: |
        black --check .
        
    - name: Type check with mypy
      run: |
        mypy src tests examples
        
    - name: Test with pytest
      run: |
        pytest --cov=src --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        fail_ci_if_error: false

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install security tools
      run: |
        python -m pip install bandit safety
        
    - name: Run Bandit security scan
      run: |
        bandit -r src/ -f json -o bandit-results.json
        
    - name: Check for dependency vulnerabilities
      run: |
        safety check

  build-and-publish:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install build dependencies
      run: |
        python -m pip install build twine wheel
        
    - name: Build package
      run: |
        python -m build
        
    - name: Publish to TestPyPI
      if: github.ref == 'refs/heads/develop'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        skip_existing: true
        
    - name: Publish to PyPI
      if: github.ref == 'refs/heads/main' && github.event.inputs.deploy == 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
