{
    "name": "Pipecat Development",
    "dockerFile": "../docker/Dockerfile.dev",
    "context": "..",
    "remoteUser": "vscode",
    "runArgs": [
        "--env-file", "${localWorkspaceFolder}/.env.dev"
    ],
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "ms-python.black-formatter",
                "ms-python.isort",
                "charliermarsh.ruff",
                "tamasfe.even-better-toml",
                "yzhang.markdown-all-in-one",
                "github.copilot",
                "github.copilot-chat",
                "streetsidesoftware.code-spell-checker",
                "ms-vscode.cmake-tools",
                "twxs.cmake",
                "ms-vscode.cpptools",
                "ms-vscode.cpptools-extension-pack",
                "ms-vscode.cpptools-themes"
            ],
            "settings": {
                "python.defaultInterpreterPath": "/usr/local/bin/python",
                "python.linting.enabled": true,
                "python.linting.flake8Enabled": false,
                "python.formatting.provider": "black",
                "python.formatting.blackPath": "/usr/local/bin/black",
                "editor.formatOnSave": true,
                "editor.codeActionsOnSave": {
                    "source.organizeImports": true
                },
                "python.testing.pytestEnabled": true,
                "cmake.configureOnOpen": true,
                "cmake.generator": "Ninja",
                "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools"
            }
        }
    },
    "forwardPorts": [8000, 8080],
    "postCreateCommand": "pip install -e '.[dev]'",
    "mounts": [
        "source=${localWorkspaceFolder}/.vscode,target=/workspace/.vscode,type=bind,consistency=cached",
        "source=pipecat-cache,target=/app/cache,type=volume"
    ],
    "containerEnv": {
        "PYTHONPATH": "/workspaces/pipecat/src",
        "PIPECAT_CACHE_DIR": "/app/cache"
    }
}
