version: '3.8'

services:
  # Main application service
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        BUILD_TYPE: Release
    image: pipecat:latest
    container_name: pipecat-app
    restart: unless-stopped
    volumes:
      - pipecat_cache:/app/cache
      - ./config:/app/config:ro
    environment:
      - PIPECAT_CACHE_DIR=/app/cache
      - PIPECAT_ENV=production
      - PYTHONOPTIMIZE=2
    ports:
      - "8000:8000"  # API server
      - "8080:8080"  # Dashboard
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 4G
        reservations:
          cpus: "1.0"
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # Optional monitoring with Prometheus/Grafana
  prometheus:
    image: prom/prometheus:latest
    container_name: pipecat-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    depends_on:
      - app

  grafana:
    image: grafana/grafana:latest
    container_name: pipecat-grafana
    restart: unless-stopped
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  # Development container - only started with docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
  dev:
    profiles: ["dev"]
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    image: pipecat-dev:latest
    container_name: pipecat-dev
    volumes:
      - .:/workspaces/pipecat
      - pipecat_dev_cache:/app/cache
      - pipecat_ccache:/home/vscode/.ccache
    environment:
      - PIPECAT_CACHE_DIR=/app/cache
      - PIPECAT_ENV=development
      - PYTHONPATH=/workspaces/pipecat/src
      - CMAKE_BUILD_PARALLEL_LEVEL=0
      - CCACHE_DIR=/home/vscode/.ccache
    ports:
      - "8001:8000"  # API server
      - "8081:8080"  # Dashboard
      - "5678:5678"  # Remote debugging
    command: sleep infinity

volumes:
  pipecat_cache:  # Persistent cache for production
  pipecat_dev_cache:  # Persistent cache for development
  pipecat_ccache:  # Cache for C++ compilation
  prometheus_data:  # Prometheus time-series data
  grafana_data:  # Grafana dashboard data
